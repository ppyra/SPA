{"remainingRequest":"G:\\spa\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\spa\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\spa\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\spa\\src\\components\\CompanyInfo.vue?vue&type=template&id=11ca6f4b&scoped=true&","dependencies":[{"path":"G:\\spa\\src\\components\\CompanyInfo.vue","mtime":1586435552502},{"path":"G:\\spa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\spa\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\spa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\spa\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}